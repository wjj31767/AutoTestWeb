# Generated by Django 5.2.7 on 2025-10-06 15:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('id', models.CharField(help_text='格式：env-xxx', max_length=64, primary_key=True, serialize=False, verbose_name='环境唯一ID')),
                ('name', models.CharField(help_text='如 FPGA-Test-01', max_length=128, unique=True, verbose_name='环境名称')),
                ('type', models.CharField(choices=[('FPGA', 'FPGA'), ('Socket', 'Socket'), ('QEMU', 'QEMU'), ('Product', '产品版')], max_length=32, verbose_name='环境类型')),
                ('conn_type', models.CharField(choices=[('Telnet', 'Telnet'), ('Redirect', 'Redirect')], max_length=32, verbose_name='环境连接方式')),
                ('ip', models.CharField(default='127.0.0.1', help_text='如 192.168.1.100', max_length=32, verbose_name='环境IP地址')),
                ('admin', models.CharField(blank=True, default='admin', help_text='不填默认为admin', max_length=32, null=True, verbose_name='mml账号名')),
                ('admin_password', models.CharField(max_length=128, verbose_name='mml账号密码')),
                ('cabinet_frame_slot', models.CharField(help_text='Redirect连接方式下需要', max_length=128, verbose_name='机柜槽位')),
                ('port', models.CharField(help_text='Telnet连接方式下需要', max_length=128, verbose_name='端口')),
                ('ftp_mask', models.CharField(blank=True, help_text='仅需FTP操作的环境有值', max_length=128, null=True, verbose_name='加密后的FTP配置')),
                ('status', models.CharField(choices=[('pending', '待处理'), ('available', '可用'), ('unavailable', '不可用'), ('occupied', '占用中')], default='pending', max_length=32, verbose_name='环境状态')),
                ('owner', models.CharField(help_text='关联tb_user.id', max_length=64, verbose_name='环境负责人')),
                ('last_check_time', models.DateTimeField(null=True, verbose_name='最后一次状态检查时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '环境信息',
                'verbose_name_plural': '环境信息',
                'db_table': 'tb_environment',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='EnvironmentVariable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, verbose_name='变量名')),
                ('value', models.TextField(blank=True, null=True, verbose_name='变量值')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='描述')),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variables', to='env_manager.environment', verbose_name='所属环境')),
            ],
            options={
                'verbose_name': '环境变量',
                'verbose_name_plural': '环境变量',
                'db_table': 'tb_environment_variable',
                'unique_together': {('environment', 'key')},
            },
        ),
    ]
