# Generated by Django 5.2.7 on 2025-10-08 08:25

from django.db import migrations
from django.db import connection


def create_test_case_table(apps, schema_editor):
    """创建测试用例表（如果不存在）"""
    with connection.cursor() as cursor:
        # 检查表是否存在
        cursor.execute("""
        SELECT name FROM sqlite_master WHERE type='table' AND name='tb_test_case';
        """)
        exists = cursor.fetchone() is not None
        
        if not exists:
            # 创建测试用例表
            cursor.execute("""
            CREATE TABLE tb_test_case (
                id VARCHAR(64) PRIMARY KEY,
                create_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
                update_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
                is_deleted BOOLEAN DEFAULT FALSE NOT NULL,
                case_name VARCHAR(100) NOT NULL,
                module_id VARCHAR(64) NOT NULL,
                status VARCHAR(20) DEFAULT 'draft' NOT NULL,
                priority INTEGER DEFAULT 3 NOT NULL,
                test_type VARCHAR(20) DEFAULT 'manual' NOT NULL,
                test_phase VARCHAR(20) DEFAULT 'unit' NOT NULL,
                description TEXT,
                steps TEXT,
                expected_result TEXT,
                actual_result TEXT,
                script_path TEXT,
                executor VARCHAR(64),
                creator VARCHAR(64) NOT NULL,
                
                FOREIGN KEY (module_id) REFERENCES tb_module(id) ON DELETE CASCADE
            )
            """)
            
            # 添加索引
            cursor.execute("""
            CREATE INDEX idx_testcase_module ON tb_test_case (module_id);
            """)
            cursor.execute("""
            CREATE INDEX idx_testcase_status ON tb_test_case (status);
            """)
            cursor.execute("""
            CREATE INDEX idx_testcase_priority ON tb_test_case (priority);
            """)
            cursor.execute("""
            CREATE INDEX idx_testcase_test_type ON tb_test_case (test_type);
            """)

def create_feature_testcase_relation_table(apps, schema_editor):
    """创建特性-测试用例关联表（如果不存在）"""
    with connection.cursor() as cursor:
        # 检查表是否存在
        cursor.execute("""
        SELECT name FROM sqlite_master WHERE type='table' AND name='tb_feature_testcase_relation';
        """)
        exists = cursor.fetchone() is not None
        
        if not exists:
            # 创建表
            cursor.execute("""
            CREATE TABLE tb_feature_testcase_relation (
                id VARCHAR(64) PRIMARY KEY,
                create_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
                update_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
                is_deleted BOOLEAN DEFAULT FALSE NOT NULL,
                feature_id VARCHAR(64) NOT NULL,
                test_case_id VARCHAR(64) NOT NULL,
                order_index INTEGER DEFAULT 0 NOT NULL,
                is_primary BOOLEAN DEFAULT FALSE NOT NULL,
                creator VARCHAR(64) NOT NULL,
                
                FOREIGN KEY (feature_id) REFERENCES tb_feature(id) ON DELETE CASCADE,
                FOREIGN KEY (test_case_id) REFERENCES tb_test_case(id) ON DELETE CASCADE,
                UNIQUE (feature_id, test_case_id)
            )
            """)
            
            # 添加索引
            cursor.execute("""
            CREATE INDEX idx_feature_relation ON tb_feature_testcase_relation (feature_id);
            """)
            cursor.execute("""
            CREATE INDEX idx_testcase_relation ON tb_feature_testcase_relation (test_case_id);
            """)
            cursor.execute("""
            CREATE INDEX idx_is_primary ON tb_feature_testcase_relation (is_primary);
            """)


class Migration(migrations.Migration):

    dependencies = [
        ('feature_testcase', '0001_initial'),
    ]

    operations = [
        # 1. 创建TestCase表
        migrations.RunPython(
            code=create_test_case_table,
            reverse_code=lambda apps, schema_editor: None  # 不提供逆向操作
        ),
        
        # 2. 创建FeatureTestCaseRelation表
        migrations.RunPython(
            code=create_feature_testcase_relation_table,
            reverse_code=lambda apps, schema_editor: None  # 不提供逆向操作
        ),
    ]
